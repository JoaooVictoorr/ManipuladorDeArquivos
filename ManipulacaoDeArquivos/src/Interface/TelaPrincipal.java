/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface;

import huffman.HuffmanFunctions;
import static huffman.HuffmanFunctions.buildTree;
import static huffman.HuffmanFunctions.printCodes;
import huffman.HuffmanTree;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javafx.scene.ImageCursor;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import manipulacaodearquivos.Conversao;
import manipulacaodearquivos.Criar;
import manipulacaodearquivos.Escrever;
import manipulacaodearquivos.Ler;
import manipulacaodearquivos.ManipulacaoDeArquivos;
import manipulacaodearquivos.SeparacaoDeSilabas;
import manipulacaodearquivos.SeparadorDePalavras;
import manipulacaodearquivos.SilabasSeparadasPorLinha;

/**
 *
 * @author João Victor
 */
public class TelaPrincipal extends javax.swing.JFrame {

    /**
     * Creates new form TelaPrincipal
     */
    public TelaPrincipal() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnSelecionarArquivo = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        areaLeitura = new javax.swing.JTextArea();
        btnComprimir = new javax.swing.JButton();
        labelCaminho = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnSelecionarArquivo.setText("Selecionar Arquivo");
        btnSelecionarArquivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSelecionarArquivoActionPerformed(evt);
            }
        });

        areaLeitura.setEditable(false);
        areaLeitura.setColumns(20);
        areaLeitura.setRows(5);
        areaLeitura.setRequestFocusEnabled(false);
        jScrollPane1.setViewportView(areaLeitura);

        btnComprimir.setText("Comprimir");
        btnComprimir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnComprimirActionPerformed(evt);
            }
        });

        labelCaminho.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        jMenu1.setText("Sobre");

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_I, java.awt.event.InputEvent.ALT_MASK));
        jMenuItem1.setText("Informações");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 475, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnSelecionarArquivo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(labelCaminho, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnComprimir, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(183, 183, 183))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnSelecionarArquivo)
                    .addComponent(labelCaminho, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 9, Short.MAX_VALUE)
                .addComponent(btnComprimir)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
        public File caminhoDescompressao;
    private void btnSelecionarArquivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSelecionarArquivoActionPerformed
       
        JFileChooser chooser = new JFileChooser();
        FileNameExtensionFilter filtro = new FileNameExtensionFilter(".txt", "txt");
        chooser.setDialogTitle("Selecione o .TXT a ser comprimido");
        chooser.setFileFilter(filtro);
        chooser.showOpenDialog(this);
        File arquivo = chooser.getSelectedFile();
        String caminho = arquivo.getAbsolutePath();
        labelCaminho.setText(caminho);
        
        try
        {
            InputStreamReader reader = new InputStreamReader(new FileInputStream(caminho),"Windows-1252");
            BufferedReader buffReader = new BufferedReader(reader);
            areaLeitura.read(buffReader, null);
            buffReader.close();
        } catch (FileNotFoundException ex) {
            JOptionPane.showMessageDialog(rootPane, "Arquivo não Encontrado!");
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(rootPane, "Não foi possível ler o arquivo!");
        }
    }//GEN-LAST:event_btnSelecionarArquivoActionPerformed

    private void btnComprimirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnComprimirActionPerformed

        Escrever escrever = new Escrever();
        Conversao c = new Conversao();
        SeparadorDePalavras separar = new SeparadorDePalavras();
        SeparacaoDeSilabas separacaoDeSilabas = new SeparacaoDeSilabas();
        SilabasSeparadasPorLinha silabas = new  SilabasSeparadasPorLinha();
        Ler ler = new Ler();
        String[] test;
        File arquivoLeitura = null;
        File arquivoCompressao = null;
        Criar criar = new Criar();

        File arquivo = new File(labelCaminho.getText());
        
            if(labelCaminho.getText().equals(""))
            {
              JOptionPane.showMessageDialog(null, "Nenhum arquivo foi selecionado!");
              btnSelecionarArquivo.requestFocusInWindow();
            }
          else
          {    JFileChooser chooserComprimir = new JFileChooser();
               chooserComprimir = new JFileChooser();
               chooserComprimir.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
               chooserComprimir.setDialogTitle("Selecione onde deseja salvar a compactação");
               chooserComprimir.showSaveDialog(this);
               caminhoDescompressao = chooserComprimir.getSelectedFile();
               separar.caminhoSeparadorPalavras = caminhoDescompressao.getAbsolutePath();
               separacaoDeSilabas.caminhoSilabas = caminhoDescompressao.getAbsolutePath();
               silabas.caminhoSilabasLinha = caminhoDescompressao.getAbsolutePath();
               
          }
        try {
            //escrever.Escrever(arquivo);
            //ler.Leitura(arquivo);
            separacaoDeSilabas.separadorFile = separar.Separar(arquivo);
        } catch (IOException ex) {
            Logger.getLogger(TelaPrincipal.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            silabas.palavrasSeparadasFile = separacaoDeSilabas.Regras();
        } catch (IOException ex) {
            Logger.getLogger(TelaPrincipal.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
           arquivoLeitura = silabas.Separar(arquivo);
        } catch (IOException ex) {
            Logger.getLogger(TelaPrincipal.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        try {
            ler.Leitura(arquivoLeitura);
        } catch (IOException ex) {
            Logger.getLogger(TelaPrincipal.class.getName()).log(Level.SEVERE, null, ex);
        }
        test = new String[ler.retorno.size()];
        int i=0;
        for(String sílabas : ler.retorno)
        {
            test[i] = ler.retorno.get(i);
            i++;
        }
        
        HuffmanFunctions hf = new HuffmanFunctions();
        hf.MedirFrequencia(test);
        HuffmanTree tree = buildTree(hf.sf);
        
        System.out.println("TABELA DE CÓDIGOS");
        System.out.println("SÍMBOLO\tQUANTIDADE\tHUFFMAN CÓDIGO");
        printCodes(tree, new StringBuffer());
//        
        // Compactar o texto
        String encode = hf.encode(tree,test);
        // Mostrar o texto Compactado
        System.out.println("\nTEXTO COMPACTADO");
        System.out.println(encode); 
        
        ArrayList<Integer> decimal = c.ConverterBinDec(encode.toCharArray());
        
        try {
            arquivoCompressao = escrever.EscreverChar(c.TransformarEmSimbolo(decimal), caminhoDescompressao + "\\TextoCompactado.txt");
        } catch (IOException ex) {
            Logger.getLogger(TelaPrincipal.class.getName()).log(Level.SEVERE, null, ex);
        }
        Ler descompactar = new Ler();
        try {
            descompactar.Leitura(arquivoCompressao);
        } catch (IOException ex) {
            Logger.getLogger(TelaPrincipal.class.getName()).log(Level.SEVERE, null, ex);
        }
           
        
        
        
    }//GEN-LAST:event_btnComprimirActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
      JOptionPane.showMessageDialog(null, "Ferramenta para teste de compressao (TCC) \n Produzida por: Igor Abdallah de Carvalho \n João Victor Silva de Macedo \n João Victor Silveira Piccoli \n Orientador: Alexandre Moraes Lovisi", "Créditos", JOptionPane.INFORMATION_MESSAGE, null);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaPrincipal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea areaLeitura;
    private javax.swing.JButton btnComprimir;
    private javax.swing.JButton btnSelecionarArquivo;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel labelCaminho;
    // End of variables declaration//GEN-END:variables
}
